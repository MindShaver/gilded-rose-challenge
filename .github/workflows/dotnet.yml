name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: | 
          3.1.x
          5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Cache SonarCloud workspace
      uses: actions/cache@v1
      with:
        path: ~\sonar-scan\cache
        key: ${{ runner.os }}-sonar-cache
        restore-keys: ${{ runner.os }}-sonar-cache

    # Speed-up analysis by caching the scanner installation
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: ~\sonar-scan\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    
    - name: Install Coverlet
      shell: pwsh
      run : |
        New-Item -Path coverage\ -ItemType Directory
        dotnet tool install --global coverlet.console

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      # The --version argument is optional. If it is omitted the latest version will be installed.
      run: |
        New-Item -Path sonar-scan\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path sonar-scan/scanner --version 4.8.0
    - name: Build
      shell: pwsh
      env:
        # Needed to get some information about the pull request, if any
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # The secret referenced in the command-line by SONAR_TOKEN should be generated
        # from https://sonarcloud.io/account/security/
        # The organization and project arguments (see /o and /k) are displayed
        # on the project dashboard in SonarCloud.
      run: |
        .\sonar-scan\scanner\dotnet-sonarscanner begin /k:"MindShaver_gilded-rose-challenge" /o:"mindshaver" /d:sonar.login="${{secrets.SONAR_TOKEN}}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=/coverage.opencover.xml
        dotnet build
        dotnet test /p:CollectCoverage=true
        .\sonar-scan\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}" 
